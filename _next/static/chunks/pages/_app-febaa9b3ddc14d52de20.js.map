{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./node_modules/next/router.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?7ae7","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/../../client/link.tsx","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./src/pages/_app.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://_N_E/./src/pages/MainLayout.module.css","webpack://_N_E/../../client/use-intersection.tsx"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","module","exports","window","__NEXT_P","push","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","hasKey","key","i","len","metatype","category","categories","unique","c","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","constructor","_hasHeadManager","emitChange","this","Component","prefetched","prefetch","isLocalURL","router","err","curLocale","options","href","p","pathname","resolveHref","as","resolvedAs","children","Children","childRef","useIntersection","rootMargin","setRef","el","setIntersectionRef","useEffect","shouldPrefetch","isVisible","locale","isPrefetched","childProps","ref","onClick","e","nodeName","event","target","isModifiedEvent","scroll","replace","shallow","success","document","linkClicked","priority","localeDomain","getDomainLocale","addBasePath","addLocale","title","MainLayout","pageProps","useRouter","samplesNames","oldPathSyntaxMatch","asPath","match","wgsl","slug","makeSampleList","useWGSL","map","className","query","styles","selected","undefined","rel","wrapper","panel","container","exampleList","obj","value","defineProperty","enumerable","configurable","writable","_defineProperty","isDisabled","unobserve","useState","useCallback","id","instance","observers","elements","observer","IntersectionObserver","entries","entry","callback","createObserver","observe","setVisible","hasIntersectionObserver"],"mappings":"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","file":"static/chunks/pages/_app-febaa9b3ddc14d52de20.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","module.exports = require('./dist/client/router')\n","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/_app\",\n        function () {\n          return require(\"private-next-pages/_app.tsx\");\n        }\n      ]);\n    ","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","module.exports = require('./dist/client/link')\n","import React, { Children, useEffect } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  addBasePath,\n  addLocale,\n  getDomainLocale,\n  isLocalURL,\n  NextRouter,\n  PrefetchOptions,\n  resolveHref,\n} from '../next-server/lib/router/router'\nimport { useRouter } from './router'\nimport { useIntersection } from './use-intersection'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<LinkProps>\n\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined' || !router) return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  const curLocale =\n    options && typeof options.locale !== 'undefined'\n      ? options.locale\n      : router && router.locale\n\n  // Join on an invalid URI character\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll,\n  }).then((success: boolean) => {\n    if (!success) return\n    if (scroll) {\n      // FIXME: proper route announcing at Router level, not Link:\n      document.body.focus()\n    }\n  })\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n\n  const router = useRouter()\n  const pathname = (router && router.pathname) || '/'\n\n  const { href, as } = React.useMemo(() => {\n    const [resolvedHref, resolvedAs] = resolveHref(pathname, props.href, true)\n    return {\n      href: resolvedHref,\n      as: props.as\n        ? resolveHref(pathname, props.as)\n        : resolvedAs || resolvedHref,\n    }\n  }, [pathname, props.href, props.as])\n\n  let { children, replace, shallow, scroll, locale } = props\n\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  const child: any = Children.only(children)\n  const childRef: any = child && typeof child === 'object' && child.ref\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n  })\n  const setRef = React.useCallback(\n    (el: Element) => {\n      setIntersectionRef(el)\n      if (childRef) {\n        if (typeof childRef === 'function') childRef(el)\n        else if (typeof childRef === 'object') {\n          childRef.current = el\n        }\n      }\n    },\n    [childRef, setIntersectionRef]\n  )\n  useEffect(() => {\n    const shouldPrefetch = isVisible && p && isLocalURL(href)\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n    const isPrefetched =\n      prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')]\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale,\n      })\n    }\n  }, [as, href, isVisible, locale, p, router])\n\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: setRef,\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      }\n    },\n  }\n\n  childProps.onMouseEnter = (e: React.MouseEvent) => {\n    if (!isLocalURL(href)) return\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e)\n    }\n    prefetch(router, href, as, { priority: true })\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n\n    const localeDomain = getDomainLocale(\n      as,\n      curLocale,\n      router && router.locales,\n      router && router.domainLocales\n    )\n\n    childProps.href =\n      localeDomain ||\n      addBasePath(addLocale(as, curLocale, router && router.defaultLocale))\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nexport default Link\n","module.exports = require('./dist/next-server/lib/head')\n","import Head from 'next/head';\nimport { AppProps } from 'next/app';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport './styles.css';\nimport styles from './MainLayout.module.css';\n\nconst title = 'WebGPU Samples';\n\nconst MainLayout: React.FunctionComponent<AppProps> = ({\n  Component,\n  pageProps,\n}) => {\n  const router = useRouter();\n  const samplesNames = [\n    'storage',\n  ];\n\n  const oldPathSyntaxMatch = router.asPath.match(/(\\?wgsl=[01])#(\\S+)/);\n  if (oldPathSyntaxMatch) {\n    const wgsl = oldPathSyntaxMatch[1];\n    const slug = oldPathSyntaxMatch[2];\n    router.replace(`/samples/${slug}/${wgsl}`);\n    return <></>;\n  }\n\n  const makeSampleList = (useWGSL: boolean) => {\n    return samplesNames.map((slug) => {\n      const className =\n        router.pathname === `/samples/${slug}` &&\n        (router.query['wgsl'] === '0') === !useWGSL\n          ? styles.selected\n          : undefined;\n      return (\n        <li key={slug} className={className}>\n          <Link href={`/samples/${slug}/?wgsl=${useWGSL ? '1' : '0'}`}>\n            {slug}\n          </Link>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta\n          name=\"description\"\n          content=\"The WebGPU Samples are a set of WGSL and SPIR-V compatible samples demonstrating the use of the WebGPU API\"\n        />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n        />\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Inconsolata&display=swap\"\n          rel=\"stylesheet\"\n        />\n        <link\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/codemirror.min.css\"\n          rel=\"stylesheet\"\n        />\n        <link\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.48.4/theme/monokai.min.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <div className={styles.wrapper}>\n        <nav className={`${styles.panel} ${styles.container}`}>\n          <h1>\n            <Link href=\"/\">{title}</Link>\n          </h1>\n          <a href=\"https://github.com/austinEng/webgpu-samples\">Github</a>\n          <hr />\n          <p>WGSL based samples</p>\n          <ul className={styles.exampleList}>{makeSampleList(true)}</ul>\n          <hr />\n          <p>SPIR-V based samples</p>\n          <ul className={styles.exampleList}>{makeSampleList(false)}</ul>\n        </nav>\n        <Component {...pageProps} />\n      </div>\n    </>\n  );\n};\n\nexport default MainLayout;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainLayout_container__owUtB\",\"wrapper\":\"MainLayout_wrapper__3oiMZ\",\"panel\":\"MainLayout_panel__2Y3Et\",\"exampleList\":\"MainLayout_exampleList__1WSKV\",\"selected\":\"MainLayout_selected__2lxK_\",\"exampleLink\":\"MainLayout_exampleLink__3MT_Q\"};","import { useCallback, useEffect, useRef, useState } from 'react'\nimport requestIdleCallback from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<IntersectionObserverInit, 'rootMargin'>\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit\ntype ObserveCallback = (isVisible: boolean) => void\ntype Observer = {\n  id: string\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined'\n\nexport function useIntersection<T extends Element>({\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const unobserve = useRef<Function>()\n  const [visible, setVisible] = useState(false)\n\n  const setRef = useCallback(\n    (el: T | null) => {\n      if (unobserve.current) {\n        unobserve.current()\n        unobserve.current = undefined\n      }\n\n      if (isDisabled || visible) return\n\n      if (el && el.tagName) {\n        unobserve.current = observe(\n          el,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { rootMargin }\n        )\n      }\n    },\n    [isDisabled, rootMargin, visible]\n  )\n\n  useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) requestIdleCallback(() => setVisible(true))\n    }\n  }, [visible])\n\n  return [setRef, visible]\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n    }\n  }\n}\n\nconst observers = new Map<string, Observer>()\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = options.rootMargin || ''\n  let instance = observers.get(id)\n  if (instance) {\n    return instance\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n\n  observers.set(\n    id,\n    (instance = {\n      id,\n      observer,\n      elements,\n    })\n  )\n  return instance\n}\n"],"sourceRoot":""}